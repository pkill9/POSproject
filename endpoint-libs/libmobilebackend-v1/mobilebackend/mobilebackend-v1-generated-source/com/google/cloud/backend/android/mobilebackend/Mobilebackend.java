/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2013-09-16 16:01:30 UTC)
 * on 2013-10-16 at 18:29:04 UTC 
 * Modify at your own risk.
 */

package com.google.cloud.backend.android.mobilebackend;

/**
 * Service definition for Mobilebackend (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link MobilebackendRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Mobilebackend extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.15.0-rc of the mobilebackend library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://lunar-reef-534.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "mobilebackend/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Mobilebackend(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Mobilebackend(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the BlobEndpoint collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Mobilebackend mobilebackend = new Mobilebackend(...);}
   *   {@code Mobilebackend.BlobEndpoint.List request = mobilebackend.blobEndpoint().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public BlobEndpoint blobEndpoint() {
    return new BlobEndpoint();
  }

  /**
   * The "blobEndpoint" collection of methods.
   */
  public class BlobEndpoint {

    /**
     * Create a request for the method "blobEndpoint.deleteBlob".
     *
     * This request holds the parameters needed by the the mobilebackend server.  After setting any
     * optional parameters, call the {@link DeleteBlob#execute()} method to invoke the remote operation.
     *
     * @param bucketName
     * @param objectPath
     * @return the request
     */
    public DeleteBlob deleteBlob(java.lang.String bucketName, java.lang.String objectPath) throws java.io.IOException {
      DeleteBlob result = new DeleteBlob(bucketName, objectPath);
      initialize(result);
      return result;
    }

    public class DeleteBlob extends MobilebackendRequest<Void> {

      private static final String REST_PATH = "blobs/{bucketName}/{objectPath}";

      /**
       * Create a request for the method "blobEndpoint.deleteBlob".
       *
       * This request holds the parameters needed by the the mobilebackend server.  After setting any
       * optional parameters, call the {@link DeleteBlob#execute()} method to invoke the remote
       * operation. <p> {@link
       * DeleteBlob#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param bucketName
       * @param objectPath
       * @since 1.13
       */
      protected DeleteBlob(java.lang.String bucketName, java.lang.String objectPath) {
        super(Mobilebackend.this, "DELETE", REST_PATH, null, Void.class);
        this.bucketName = com.google.api.client.util.Preconditions.checkNotNull(bucketName, "Required parameter bucketName must be specified.");
        this.objectPath = com.google.api.client.util.Preconditions.checkNotNull(objectPath, "Required parameter objectPath must be specified.");
      }

      @Override
      public DeleteBlob setAlt(java.lang.String alt) {
        return (DeleteBlob) super.setAlt(alt);
      }

      @Override
      public DeleteBlob setFields(java.lang.String fields) {
        return (DeleteBlob) super.setFields(fields);
      }

      @Override
      public DeleteBlob setKey(java.lang.String key) {
        return (DeleteBlob) super.setKey(key);
      }

      @Override
      public DeleteBlob setOauthToken(java.lang.String oauthToken) {
        return (DeleteBlob) super.setOauthToken(oauthToken);
      }

      @Override
      public DeleteBlob setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (DeleteBlob) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public DeleteBlob setQuotaUser(java.lang.String quotaUser) {
        return (DeleteBlob) super.setQuotaUser(quotaUser);
      }

      @Override
      public DeleteBlob setUserIp(java.lang.String userIp) {
        return (DeleteBlob) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String bucketName;

      /**

       */
      public java.lang.String getBucketName() {
        return bucketName;
      }

      public DeleteBlob setBucketName(java.lang.String bucketName) {
        this.bucketName = bucketName;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String objectPath;

      /**

       */
      public java.lang.String getObjectPath() {
        return objectPath;
      }

      public DeleteBlob setObjectPath(java.lang.String objectPath) {
        this.objectPath = objectPath;
        return this;
      }

      @Override
      public DeleteBlob set(String parameterName, Object value) {
        return (DeleteBlob) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "blobEndpoint.getDownloadUrl".
     *
     * This request holds the parameters needed by the the mobilebackend server.  After setting any
     * optional parameters, call the {@link GetDownloadUrl#execute()} method to invoke the remote
     * operation.
     *
     * @param bucketName
     * @param objectPath
     * @return the request
     */
    public GetDownloadUrl getDownloadUrl(java.lang.String bucketName, java.lang.String objectPath) throws java.io.IOException {
      GetDownloadUrl result = new GetDownloadUrl(bucketName, objectPath);
      initialize(result);
      return result;
    }

    public class GetDownloadUrl extends MobilebackendRequest<com.google.cloud.backend.android.mobilebackend.model.BlobAccess> {

      private static final String REST_PATH = "blobs/downloads/{bucketName}/{objectPath}";

      /**
       * Create a request for the method "blobEndpoint.getDownloadUrl".
       *
       * This request holds the parameters needed by the the mobilebackend server.  After setting any
       * optional parameters, call the {@link GetDownloadUrl#execute()} method to invoke the remote
       * operation. <p> {@link GetDownloadUrl#initialize(com.google.api.client.googleapis.services.Abstr
       * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param bucketName
       * @param objectPath
       * @since 1.13
       */
      protected GetDownloadUrl(java.lang.String bucketName, java.lang.String objectPath) {
        super(Mobilebackend.this, "GET", REST_PATH, null, com.google.cloud.backend.android.mobilebackend.model.BlobAccess.class);
        this.bucketName = com.google.api.client.util.Preconditions.checkNotNull(bucketName, "Required parameter bucketName must be specified.");
        this.objectPath = com.google.api.client.util.Preconditions.checkNotNull(objectPath, "Required parameter objectPath must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetDownloadUrl setAlt(java.lang.String alt) {
        return (GetDownloadUrl) super.setAlt(alt);
      }

      @Override
      public GetDownloadUrl setFields(java.lang.String fields) {
        return (GetDownloadUrl) super.setFields(fields);
      }

      @Override
      public GetDownloadUrl setKey(java.lang.String key) {
        return (GetDownloadUrl) super.setKey(key);
      }

      @Override
      public GetDownloadUrl setOauthToken(java.lang.String oauthToken) {
        return (GetDownloadUrl) super.setOauthToken(oauthToken);
      }

      @Override
      public GetDownloadUrl setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetDownloadUrl) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetDownloadUrl setQuotaUser(java.lang.String quotaUser) {
        return (GetDownloadUrl) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetDownloadUrl setUserIp(java.lang.String userIp) {
        return (GetDownloadUrl) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String bucketName;

      /**

       */
      public java.lang.String getBucketName() {
        return bucketName;
      }

      public GetDownloadUrl setBucketName(java.lang.String bucketName) {
        this.bucketName = bucketName;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String objectPath;

      /**

       */
      public java.lang.String getObjectPath() {
        return objectPath;
      }

      public GetDownloadUrl setObjectPath(java.lang.String objectPath) {
        this.objectPath = objectPath;
        return this;
      }

      @Override
      public GetDownloadUrl set(String parameterName, Object value) {
        return (GetDownloadUrl) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "blobEndpoint.getUploadUrl".
     *
     * This request holds the parameters needed by the the mobilebackend server.  After setting any
     * optional parameters, call the {@link GetUploadUrl#execute()} method to invoke the remote
     * operation.
     *
     * @param bucketName
     * @param objectPath
     * @param accessMode
     * @return the request
     */
    public GetUploadUrl getUploadUrl(java.lang.String bucketName, java.lang.String objectPath, java.lang.String accessMode) throws java.io.IOException {
      GetUploadUrl result = new GetUploadUrl(bucketName, objectPath, accessMode);
      initialize(result);
      return result;
    }

    public class GetUploadUrl extends MobilebackendRequest<com.google.cloud.backend.android.mobilebackend.model.BlobAccess> {

      private static final String REST_PATH = "blobs/uploads/{bucketName}/{objectPath}";

      /**
       * Create a request for the method "blobEndpoint.getUploadUrl".
       *
       * This request holds the parameters needed by the the mobilebackend server.  After setting any
       * optional parameters, call the {@link GetUploadUrl#execute()} method to invoke the remote
       * operation. <p> {@link
       * GetUploadUrl#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param bucketName
       * @param objectPath
       * @param accessMode
       * @since 1.13
       */
      protected GetUploadUrl(java.lang.String bucketName, java.lang.String objectPath, java.lang.String accessMode) {
        super(Mobilebackend.this, "GET", REST_PATH, null, com.google.cloud.backend.android.mobilebackend.model.BlobAccess.class);
        this.bucketName = com.google.api.client.util.Preconditions.checkNotNull(bucketName, "Required parameter bucketName must be specified.");
        this.objectPath = com.google.api.client.util.Preconditions.checkNotNull(objectPath, "Required parameter objectPath must be specified.");
        this.accessMode = com.google.api.client.util.Preconditions.checkNotNull(accessMode, "Required parameter accessMode must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetUploadUrl setAlt(java.lang.String alt) {
        return (GetUploadUrl) super.setAlt(alt);
      }

      @Override
      public GetUploadUrl setFields(java.lang.String fields) {
        return (GetUploadUrl) super.setFields(fields);
      }

      @Override
      public GetUploadUrl setKey(java.lang.String key) {
        return (GetUploadUrl) super.setKey(key);
      }

      @Override
      public GetUploadUrl setOauthToken(java.lang.String oauthToken) {
        return (GetUploadUrl) super.setOauthToken(oauthToken);
      }

      @Override
      public GetUploadUrl setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetUploadUrl) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetUploadUrl setQuotaUser(java.lang.String quotaUser) {
        return (GetUploadUrl) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetUploadUrl setUserIp(java.lang.String userIp) {
        return (GetUploadUrl) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String bucketName;

      /**

       */
      public java.lang.String getBucketName() {
        return bucketName;
      }

      public GetUploadUrl setBucketName(java.lang.String bucketName) {
        this.bucketName = bucketName;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String objectPath;

      /**

       */
      public java.lang.String getObjectPath() {
        return objectPath;
      }

      public GetUploadUrl setObjectPath(java.lang.String objectPath) {
        this.objectPath = objectPath;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String accessMode;

      /**

       */
      public java.lang.String getAccessMode() {
        return accessMode;
      }

      public GetUploadUrl setAccessMode(java.lang.String accessMode) {
        this.accessMode = accessMode;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String contentType;

      /**

       */
      public java.lang.String getContentType() {
        return contentType;
      }

      public GetUploadUrl setContentType(java.lang.String contentType) {
        this.contentType = contentType;
        return this;
      }

      @Override
      public GetUploadUrl set(String parameterName, Object value) {
        return (GetUploadUrl) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the EndpointV1 collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Mobilebackend mobilebackend = new Mobilebackend(...);}
   *   {@code Mobilebackend.EndpointV1.List request = mobilebackend.endpointV1().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public EndpointV1 endpointV1() {
    return new EndpointV1();
  }

  /**
   * The "endpointV1" collection of methods.
   */
  public class EndpointV1 {

    /**
     * Create a request for the method "endpointV1.delete".
     *
     * This request holds the parameters needed by the the mobilebackend server.  After setting any
     * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
     *
     * @param kind
     * @param id
     * @return the request
     */
    public Delete delete(java.lang.String kind, java.lang.String id) throws java.io.IOException {
      Delete result = new Delete(kind, id);
      initialize(result);
      return result;
    }

    public class Delete extends MobilebackendRequest<com.google.cloud.backend.android.mobilebackend.model.EntityDto> {

      private static final String REST_PATH = "CloudEntities/{kind}/{id}";

      /**
       * Create a request for the method "endpointV1.delete".
       *
       * This request holds the parameters needed by the the mobilebackend server.  After setting any
       * optional parameters, call the {@link Delete#execute()} method to invoke the remote operation.
       * <p> {@link
       * Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param kind
       * @param id
       * @since 1.13
       */
      protected Delete(java.lang.String kind, java.lang.String id) {
        super(Mobilebackend.this, "DELETE", REST_PATH, null, com.google.cloud.backend.android.mobilebackend.model.EntityDto.class);
        this.kind = com.google.api.client.util.Preconditions.checkNotNull(kind, "Required parameter kind must be specified.");
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public Delete setAlt(java.lang.String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(java.lang.String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(java.lang.String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(java.lang.String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(java.lang.String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(java.lang.String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String kind;

      /**

       */
      public java.lang.String getKind() {
        return kind;
      }

      public Delete setKind(java.lang.String kind) {
        this.kind = kind;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String id;

      /**

       */
      public java.lang.String getId() {
        return id;
      }

      public Delete setId(java.lang.String id) {
        this.id = id;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "endpointV1.deleteAll".
     *
     * This request holds the parameters needed by the the mobilebackend server.  After setting any
     * optional parameters, call the {@link DeleteAll#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.cloud.backend.android.mobilebackend.model.EntityListDto}
     * @return the request
     */
    public DeleteAll deleteAll(com.google.cloud.backend.android.mobilebackend.model.EntityListDto content) throws java.io.IOException {
      DeleteAll result = new DeleteAll(content);
      initialize(result);
      return result;
    }

    public class DeleteAll extends MobilebackendRequest<com.google.cloud.backend.android.mobilebackend.model.EntityListDto> {

      private static final String REST_PATH = "CloudEntities/deleteAll";

      /**
       * Create a request for the method "endpointV1.deleteAll".
       *
       * This request holds the parameters needed by the the mobilebackend server.  After setting any
       * optional parameters, call the {@link DeleteAll#execute()} method to invoke the remote
       * operation. <p> {@link
       * DeleteAll#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.cloud.backend.android.mobilebackend.model.EntityListDto}
       * @since 1.13
       */
      protected DeleteAll(com.google.cloud.backend.android.mobilebackend.model.EntityListDto content) {
        super(Mobilebackend.this, "POST", REST_PATH, content, com.google.cloud.backend.android.mobilebackend.model.EntityListDto.class);
      }

      @Override
      public DeleteAll setAlt(java.lang.String alt) {
        return (DeleteAll) super.setAlt(alt);
      }

      @Override
      public DeleteAll setFields(java.lang.String fields) {
        return (DeleteAll) super.setFields(fields);
      }

      @Override
      public DeleteAll setKey(java.lang.String key) {
        return (DeleteAll) super.setKey(key);
      }

      @Override
      public DeleteAll setOauthToken(java.lang.String oauthToken) {
        return (DeleteAll) super.setOauthToken(oauthToken);
      }

      @Override
      public DeleteAll setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (DeleteAll) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public DeleteAll setQuotaUser(java.lang.String quotaUser) {
        return (DeleteAll) super.setQuotaUser(quotaUser);
      }

      @Override
      public DeleteAll setUserIp(java.lang.String userIp) {
        return (DeleteAll) super.setUserIp(userIp);
      }

      @Override
      public DeleteAll set(String parameterName, Object value) {
        return (DeleteAll) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "endpointV1.get".
     *
     * This request holds the parameters needed by the the mobilebackend server.  After setting any
     * optional parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param kind
     * @param id
     * @return the request
     */
    public Get get(java.lang.String kind, java.lang.String id) throws java.io.IOException {
      Get result = new Get(kind, id);
      initialize(result);
      return result;
    }

    public class Get extends MobilebackendRequest<com.google.cloud.backend.android.mobilebackend.model.EntityDto> {

      private static final String REST_PATH = "CloudEntities/{kind}/{id}";

      /**
       * Create a request for the method "endpointV1.get".
       *
       * This request holds the parameters needed by the the mobilebackend server.  After setting any
       * optional parameters, call the {@link Get#execute()} method to invoke the remote operation. <p>
       * {@link Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param kind
       * @param id
       * @since 1.13
       */
      protected Get(java.lang.String kind, java.lang.String id) {
        super(Mobilebackend.this, "GET", REST_PATH, null, com.google.cloud.backend.android.mobilebackend.model.EntityDto.class);
        this.kind = com.google.api.client.util.Preconditions.checkNotNull(kind, "Required parameter kind must be specified.");
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String kind;

      /**

       */
      public java.lang.String getKind() {
        return kind;
      }

      public Get setKind(java.lang.String kind) {
        this.kind = kind;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String id;

      /**

       */
      public java.lang.String getId() {
        return id;
      }

      public Get setId(java.lang.String id) {
        this.id = id;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "endpointV1.getAll".
     *
     * This request holds the parameters needed by the the mobilebackend server.  After setting any
     * optional parameters, call the {@link GetAll#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.cloud.backend.android.mobilebackend.model.EntityListDto}
     * @return the request
     */
    public GetAll getAll(com.google.cloud.backend.android.mobilebackend.model.EntityListDto content) throws java.io.IOException {
      GetAll result = new GetAll(content);
      initialize(result);
      return result;
    }

    public class GetAll extends MobilebackendRequest<com.google.cloud.backend.android.mobilebackend.model.EntityListDto> {

      private static final String REST_PATH = "CloudEntities/getAll";

      /**
       * Create a request for the method "endpointV1.getAll".
       *
       * This request holds the parameters needed by the the mobilebackend server.  After setting any
       * optional parameters, call the {@link GetAll#execute()} method to invoke the remote operation.
       * <p> {@link
       * GetAll#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.cloud.backend.android.mobilebackend.model.EntityListDto}
       * @since 1.13
       */
      protected GetAll(com.google.cloud.backend.android.mobilebackend.model.EntityListDto content) {
        super(Mobilebackend.this, "POST", REST_PATH, content, com.google.cloud.backend.android.mobilebackend.model.EntityListDto.class);
      }

      @Override
      public GetAll setAlt(java.lang.String alt) {
        return (GetAll) super.setAlt(alt);
      }

      @Override
      public GetAll setFields(java.lang.String fields) {
        return (GetAll) super.setFields(fields);
      }

      @Override
      public GetAll setKey(java.lang.String key) {
        return (GetAll) super.setKey(key);
      }

      @Override
      public GetAll setOauthToken(java.lang.String oauthToken) {
        return (GetAll) super.setOauthToken(oauthToken);
      }

      @Override
      public GetAll setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetAll) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetAll setQuotaUser(java.lang.String quotaUser) {
        return (GetAll) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetAll setUserIp(java.lang.String userIp) {
        return (GetAll) super.setUserIp(userIp);
      }

      @Override
      public GetAll set(String parameterName, Object value) {
        return (GetAll) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "endpointV1.insert".
     *
     * This request holds the parameters needed by the the mobilebackend server.  After setting any
     * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
     *
     * @param kind
     * @param content the {@link com.google.cloud.backend.android.mobilebackend.model.EntityDto}
     * @return the request
     */
    public Insert insert(java.lang.String kind, com.google.cloud.backend.android.mobilebackend.model.EntityDto content) throws java.io.IOException {
      Insert result = new Insert(kind, content);
      initialize(result);
      return result;
    }

    public class Insert extends MobilebackendRequest<com.google.cloud.backend.android.mobilebackend.model.EntityDto> {

      private static final String REST_PATH = "CloudEntities/insert/{kind}";

      /**
       * Create a request for the method "endpointV1.insert".
       *
       * This request holds the parameters needed by the the mobilebackend server.  After setting any
       * optional parameters, call the {@link Insert#execute()} method to invoke the remote operation.
       * <p> {@link
       * Insert#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param kind
       * @param content the {@link com.google.cloud.backend.android.mobilebackend.model.EntityDto}
       * @since 1.13
       */
      protected Insert(java.lang.String kind, com.google.cloud.backend.android.mobilebackend.model.EntityDto content) {
        super(Mobilebackend.this, "POST", REST_PATH, content, com.google.cloud.backend.android.mobilebackend.model.EntityDto.class);
        this.kind = com.google.api.client.util.Preconditions.checkNotNull(kind, "Required parameter kind must be specified.");
      }

      @Override
      public Insert setAlt(java.lang.String alt) {
        return (Insert) super.setAlt(alt);
      }

      @Override
      public Insert setFields(java.lang.String fields) {
        return (Insert) super.setFields(fields);
      }

      @Override
      public Insert setKey(java.lang.String key) {
        return (Insert) super.setKey(key);
      }

      @Override
      public Insert setOauthToken(java.lang.String oauthToken) {
        return (Insert) super.setOauthToken(oauthToken);
      }

      @Override
      public Insert setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Insert) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Insert setQuotaUser(java.lang.String quotaUser) {
        return (Insert) super.setQuotaUser(quotaUser);
      }

      @Override
      public Insert setUserIp(java.lang.String userIp) {
        return (Insert) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String kind;

      /**

       */
      public java.lang.String getKind() {
        return kind;
      }

      public Insert setKind(java.lang.String kind) {
        this.kind = kind;
        return this;
      }

      @Override
      public Insert set(String parameterName, Object value) {
        return (Insert) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "endpointV1.insertAll".
     *
     * This request holds the parameters needed by the the mobilebackend server.  After setting any
     * optional parameters, call the {@link InsertAll#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.cloud.backend.android.mobilebackend.model.EntityListDto}
     * @return the request
     */
    public InsertAll insertAll(com.google.cloud.backend.android.mobilebackend.model.EntityListDto content) throws java.io.IOException {
      InsertAll result = new InsertAll(content);
      initialize(result);
      return result;
    }

    public class InsertAll extends MobilebackendRequest<com.google.cloud.backend.android.mobilebackend.model.EntityListDto> {

      private static final String REST_PATH = "CloudEntities/insertAll";

      /**
       * Create a request for the method "endpointV1.insertAll".
       *
       * This request holds the parameters needed by the the mobilebackend server.  After setting any
       * optional parameters, call the {@link InsertAll#execute()} method to invoke the remote
       * operation. <p> {@link
       * InsertAll#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.cloud.backend.android.mobilebackend.model.EntityListDto}
       * @since 1.13
       */
      protected InsertAll(com.google.cloud.backend.android.mobilebackend.model.EntityListDto content) {
        super(Mobilebackend.this, "POST", REST_PATH, content, com.google.cloud.backend.android.mobilebackend.model.EntityListDto.class);
      }

      @Override
      public InsertAll setAlt(java.lang.String alt) {
        return (InsertAll) super.setAlt(alt);
      }

      @Override
      public InsertAll setFields(java.lang.String fields) {
        return (InsertAll) super.setFields(fields);
      }

      @Override
      public InsertAll setKey(java.lang.String key) {
        return (InsertAll) super.setKey(key);
      }

      @Override
      public InsertAll setOauthToken(java.lang.String oauthToken) {
        return (InsertAll) super.setOauthToken(oauthToken);
      }

      @Override
      public InsertAll setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (InsertAll) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public InsertAll setQuotaUser(java.lang.String quotaUser) {
        return (InsertAll) super.setQuotaUser(quotaUser);
      }

      @Override
      public InsertAll setUserIp(java.lang.String userIp) {
        return (InsertAll) super.setUserIp(userIp);
      }

      @Override
      public InsertAll set(String parameterName, Object value) {
        return (InsertAll) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "endpointV1.list".
     *
     * This request holds the parameters needed by the the mobilebackend server.  After setting any
     * optional parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.cloud.backend.android.mobilebackend.model.QueryDto}
     * @return the request
     */
    public List list(com.google.cloud.backend.android.mobilebackend.model.QueryDto content) throws java.io.IOException {
      List result = new List(content);
      initialize(result);
      return result;
    }

    public class List extends MobilebackendRequest<com.google.cloud.backend.android.mobilebackend.model.EntityListDto> {

      private static final String REST_PATH = "CloudEntities/list";

      /**
       * Create a request for the method "endpointV1.list".
       *
       * This request holds the parameters needed by the the mobilebackend server.  After setting any
       * optional parameters, call the {@link List#execute()} method to invoke the remote operation. <p>
       * {@link List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.cloud.backend.android.mobilebackend.model.QueryDto}
       * @since 1.13
       */
      protected List(com.google.cloud.backend.android.mobilebackend.model.QueryDto content) {
        super(Mobilebackend.this, "POST", REST_PATH, content, com.google.cloud.backend.android.mobilebackend.model.EntityListDto.class);
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "endpointV1.patch".
     *
     * This request holds the parameters needed by the the mobilebackend server.  After setting any
     * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
     *
     * @param kind
     * @param id
     * @param content the {@link com.google.cloud.backend.android.mobilebackend.model.EntityDto}
     * @return the request
     */
    public Patch patch(java.lang.String kind, java.lang.String id, com.google.cloud.backend.android.mobilebackend.model.EntityDto content) throws java.io.IOException {
      Patch result = new Patch(kind, id, content);
      initialize(result);
      return result;
    }

    public class Patch extends MobilebackendRequest<com.google.cloud.backend.android.mobilebackend.model.EntityDto> {

      private static final String REST_PATH = "CloudEntities/update/{kind}";

      /**
       * Create a request for the method "endpointV1.patch".
       *
       * This request holds the parameters needed by the the mobilebackend server.  After setting any
       * optional parameters, call the {@link Patch#execute()} method to invoke the remote operation.
       * <p> {@link
       * Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param kind
       * @param id
       * @param content the {@link com.google.cloud.backend.android.mobilebackend.model.EntityDto}
       * @since 1.13
       */
      protected Patch(java.lang.String kind, java.lang.String id, com.google.cloud.backend.android.mobilebackend.model.EntityDto content) {
        super(Mobilebackend.this, "PATCH", REST_PATH, content, com.google.cloud.backend.android.mobilebackend.model.EntityDto.class);
        this.kind = com.google.api.client.util.Preconditions.checkNotNull(kind, "Required parameter kind must be specified.");
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
      }

      @Override
      public Patch setAlt(java.lang.String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(java.lang.String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(java.lang.String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(java.lang.String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(java.lang.String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(java.lang.String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String kind;

      /**

       */
      public java.lang.String getKind() {
        return kind;
      }

      public Patch setKind(java.lang.String kind) {
        this.kind = kind;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String id;

      /**

       */
      public java.lang.String getId() {
        return id;
      }

      public Patch setId(java.lang.String id) {
        this.id = id;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "endpointV1.update".
     *
     * This request holds the parameters needed by the the mobilebackend server.  After setting any
     * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
     *
     * @param kind
     * @param content the {@link com.google.cloud.backend.android.mobilebackend.model.EntityDto}
     * @return the request
     */
    public Update update(java.lang.String kind, com.google.cloud.backend.android.mobilebackend.model.EntityDto content) throws java.io.IOException {
      Update result = new Update(kind, content);
      initialize(result);
      return result;
    }

    public class Update extends MobilebackendRequest<com.google.cloud.backend.android.mobilebackend.model.EntityDto> {

      private static final String REST_PATH = "CloudEntities/update/{kind}";

      /**
       * Create a request for the method "endpointV1.update".
       *
       * This request holds the parameters needed by the the mobilebackend server.  After setting any
       * optional parameters, call the {@link Update#execute()} method to invoke the remote operation.
       * <p> {@link
       * Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param kind
       * @param content the {@link com.google.cloud.backend.android.mobilebackend.model.EntityDto}
       * @since 1.13
       */
      protected Update(java.lang.String kind, com.google.cloud.backend.android.mobilebackend.model.EntityDto content) {
        super(Mobilebackend.this, "POST", REST_PATH, content, com.google.cloud.backend.android.mobilebackend.model.EntityDto.class);
        this.kind = com.google.api.client.util.Preconditions.checkNotNull(kind, "Required parameter kind must be specified.");
      }

      @Override
      public Update setAlt(java.lang.String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(java.lang.String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(java.lang.String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(java.lang.String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(java.lang.String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(java.lang.String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String kind;

      /**

       */
      public java.lang.String getKind() {
        return kind;
      }

      public Update setKind(java.lang.String kind) {
        this.kind = kind;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "endpointV1.updateAll".
     *
     * This request holds the parameters needed by the the mobilebackend server.  After setting any
     * optional parameters, call the {@link UpdateAll#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.cloud.backend.android.mobilebackend.model.EntityListDto}
     * @return the request
     */
    public UpdateAll updateAll(com.google.cloud.backend.android.mobilebackend.model.EntityListDto content) throws java.io.IOException {
      UpdateAll result = new UpdateAll(content);
      initialize(result);
      return result;
    }

    public class UpdateAll extends MobilebackendRequest<com.google.cloud.backend.android.mobilebackend.model.EntityListDto> {

      private static final String REST_PATH = "CloudEntities/updateAll";

      /**
       * Create a request for the method "endpointV1.updateAll".
       *
       * This request holds the parameters needed by the the mobilebackend server.  After setting any
       * optional parameters, call the {@link UpdateAll#execute()} method to invoke the remote
       * operation. <p> {@link
       * UpdateAll#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.cloud.backend.android.mobilebackend.model.EntityListDto}
       * @since 1.13
       */
      protected UpdateAll(com.google.cloud.backend.android.mobilebackend.model.EntityListDto content) {
        super(Mobilebackend.this, "POST", REST_PATH, content, com.google.cloud.backend.android.mobilebackend.model.EntityListDto.class);
      }

      @Override
      public UpdateAll setAlt(java.lang.String alt) {
        return (UpdateAll) super.setAlt(alt);
      }

      @Override
      public UpdateAll setFields(java.lang.String fields) {
        return (UpdateAll) super.setFields(fields);
      }

      @Override
      public UpdateAll setKey(java.lang.String key) {
        return (UpdateAll) super.setKey(key);
      }

      @Override
      public UpdateAll setOauthToken(java.lang.String oauthToken) {
        return (UpdateAll) super.setOauthToken(oauthToken);
      }

      @Override
      public UpdateAll setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UpdateAll) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UpdateAll setQuotaUser(java.lang.String quotaUser) {
        return (UpdateAll) super.setQuotaUser(quotaUser);
      }

      @Override
      public UpdateAll setUserIp(java.lang.String userIp) {
        return (UpdateAll) super.setUserIp(userIp);
      }

      @Override
      public UpdateAll set(String parameterName, Object value) {
        return (UpdateAll) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link Mobilebackend}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Mobilebackend}. */
    @Override
    public Mobilebackend build() {
      return new Mobilebackend(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link MobilebackendRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setMobilebackendRequestInitializer(
        MobilebackendRequestInitializer mobilebackendRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(mobilebackendRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
